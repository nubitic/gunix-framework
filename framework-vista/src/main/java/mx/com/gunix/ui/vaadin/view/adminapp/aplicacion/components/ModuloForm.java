package mx.com.gunix.ui.vaadin.view.adminapp.aplicacion.components;

import static java.nio.file.StandardCopyOption.REPLACE_EXISTING;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;

import mx.com.gunix.framework.security.domain.Modulo;
import mx.com.gunix.framework.ui.GunixFile;
import mx.com.gunix.framework.ui.vaadin.component.GunixBeanFieldGroup;
import mx.com.gunix.framework.ui.vaadin.component.GunixUploadField;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.fieldgroup.FieldGroup.CommitException;
import com.vaadin.server.VaadinService;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.FormLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.TextField;
import com.vaadin.ui.Window;

public class ModuloForm extends CustomComponent {
	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	public final class ModuloView extends Modulo {
		private static final long serialVersionUID = 1L;
		private transient GunixFile iconoFile;

		public GunixFile getIconoFile() {
			return iconoFile;
		}

		public void setIconoFile(GunixFile iconoFile) {
			setIcono(iconoFile.getFileName());
			this.iconoFile = iconoFile;
		}
	}

	@AutoGenerated
	private FormLayout mainLayout;

	@AutoGenerated
	private HorizontalLayout horizontalLayout_1;

	@AutoGenerated
	private Button cancelarButton;

	@AutoGenerated
	private Button aceptarButton;

	@AutoGenerated
	private GunixUploadField iconoFile;

	@AutoGenerated
	private TextField descripcion;

	@AutoGenerated
	private TextField idModulo;

	private GunixBeanFieldGroup<ModuloView> moduloFieldGroup;

	private static final long serialVersionUID = 1L;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 * 
	 * @param window
	 */
	public ModuloForm(Window window, boolean esSoloLectura) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		moduloFieldGroup = new GunixBeanFieldGroup<ModuloView>(ModuloView.class);
		moduloFieldGroup.setItemDataSource(new ModuloView());
		moduloFieldGroup.bindMemberFields(this);
		iconoFile.setRequired(true);
		if (!esSoloLectura) {
			aceptarButton.addClickListener(event -> {
				try {
					moduloFieldGroup.commit();
					GunixFile iconoF = (GunixFile) iconoFile.getValue();
					Files.copy(iconoF.getFile().toPath(), new File(VaadinService.getCurrent().getBaseDirectory().getAbsolutePath() + "/VAADIN/themes/gunix/img/"
							+ moduloFieldGroup.getItemDataSource().getBean().getIcono()).toPath(), REPLACE_EXISTING);
					window.close();
				} catch (CommitException e) {
					Notification.show("Existen errores en el formulario", Type.ERROR_MESSAGE);
				} catch (IOException ioe) {
					throw new RuntimeException(ioe);
				}
			});
		} else {
			aceptarButton.setVisible(false);
			idModulo.setEnabled(false);
			descripcion.setEnabled(false);
			iconoFile.setEnabled(false);
		}

		cancelarButton.addClickListener(event -> {
			window.close();
		});

	}
	
	public void setModulo(Modulo m) {
		moduloFieldGroup = new GunixBeanFieldGroup<ModuloView>(ModuloView.class);
		ModuloView mv = new ModuloView();
		mv.setAplicacion(m.getAplicacion());
		mv.setDescripcion(m.getDescripcion());
		mv.setFunciones(m.getFunciones());
		mv.setIcono(m.getIcono());
		mv.setIdModulo(m.getIdModulo());
		moduloFieldGroup.setItemDataSource(mv);
		moduloFieldGroup.bindMemberFields(this);
	}
	
	public Modulo getModulo() {
		ModuloView m = moduloFieldGroup.getItemDataSource().getBean();
		return m.getIdModulo() == null ? null : toModulo(m);
	}

	private Modulo toModulo(ModuloView m) {
		Modulo mb = new Modulo();
		mb.setDescripcion(m.getDescripcion());
		mb.setIcono(m.getIcono());
		mb.setIdModulo(m.getIdModulo());
		return mb;
	}

	@AutoGenerated
	private FormLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new FormLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(true);
		mainLayout.setSpacing(true);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// idModulo
		idModulo = new TextField();
		idModulo.setCaption("Id Modulo");
		idModulo.setImmediate(false);
		idModulo.setWidth("-1px");
		idModulo.setHeight("-1px");
		idModulo.setInvalidAllowed(false);
		idModulo.setNullRepresentation("");
		mainLayout.addComponent(idModulo);

		// descripcion
		descripcion = new TextField();
		descripcion.setCaption("Descripci√≥n");
		descripcion.setImmediate(false);
		descripcion.setWidth("-1px");
		descripcion.setHeight("-1px");
		descripcion.setInvalidAllowed(false);
		descripcion.setNullRepresentation("");
		mainLayout.addComponent(descripcion);

		// icono
		iconoFile = new GunixUploadField();
		iconoFile.setCaption("Icono");
		iconoFile.setImmediate(false);
		iconoFile.setWidth("-1px");
		iconoFile.setHeight("-1px");
		iconoFile.setAcceptFilter(".jpe,.jpg,.jpeg,.gif,.png");
		mainLayout.addComponent(iconoFile);

		// horizontalLayout_1
		horizontalLayout_1 = buildHorizontalLayout_1();
		mainLayout.addComponent(horizontalLayout_1);

		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout_1() {
		// common part: create layout
		horizontalLayout_1 = new HorizontalLayout();
		horizontalLayout_1.setImmediate(false);
		horizontalLayout_1.setWidth("-1px");
		horizontalLayout_1.setHeight("-1px");
		horizontalLayout_1.setMargin(false);
		horizontalLayout_1.setSpacing(true);

		// aceptarButton
		aceptarButton = new Button();
		aceptarButton.setCaption("Aceptar");
		aceptarButton.setImmediate(true);
		aceptarButton.setWidth("-1px");
		aceptarButton.setHeight("-1px");
		horizontalLayout_1.addComponent(aceptarButton);

		// cancelarButton
		cancelarButton = new Button();
		cancelarButton.setCaption("Cancelar");
		cancelarButton.setImmediate(true);
		cancelarButton.setWidth("-1px");
		cancelarButton.setHeight("-1px");
		horizontalLayout_1.addComponent(cancelarButton);

		return horizontalLayout_1;
	}

}
