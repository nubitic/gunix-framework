<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="mx.com.gunix.framework.activiti.persistence.entity.GunixVariableHistoricProcessInstance">

	<select id="selectProcessInstancesByQueryCriteriaGunix"
		parameterType="org.activiti.engine.impl.GunixVariableProcessInstanceQuery"
		resultMap="org.activiti.engine.impl.persistence.entity.ExecutionEntity.processInstanceResultMap">
		${limitBefore}
		select distinct RES.* ${limitBetween}, P.KEY_ as
		ProcessDefinitionKey, P.ID_
		as ProcessDefinitionId, P.NAME_ as
		ProcessDefinitionName, P.VERSION_
		as ProcessDefinitionVersion,
		P.DEPLOYMENT_ID_ as DeploymentId
		<include refid="selectExecutionsByQueryCriteriaSql" />
		${orderBy}
		${limitAfter}
	</select>

	<sql id="selectExecutionsByQueryCriteriaSql">
		from ${prefix}ACT_RU_EXECUTION RES
		inner join ${prefix}ACT_RE_PROCDEF P
		on RES.PROC_DEF_ID_ = P.ID_
		<include refid="commonSelectExecutionsByQueryCriteriaSql" />
	</sql>

	<sql id="commonSelectExecutionsByQueryCriteriaSql">
		<foreach collection="queryVariableValues" index="index"
			item="queryVariableValue">
			<choose>
				<when test="queryVariableValue.local">
					inner join ${prefix}ACT_RU_VARIABLE A${index} on RES.ID_ =
					A${index}.EXECUTION_ID_
				</when>
				<otherwise>
					inner join ${prefix}ACT_RU_VARIABLE A${index} on RES.PROC_INST_ID_ =
					A${index}.PROC_INST_ID_
				</otherwise>
			</choose>
		</foreach>

		<foreach collection="variables" index="index"
			item="queryVariableValue">
			<choose>
				<when test="queryVariableValue.local">
					inner join ${prefix}ACT_RU_VARIABLE B${index} on RES.ID_ =
					B${index}.EXECUTION_ID_
				</when>
				<otherwise>
					inner join ${prefix}ACT_RU_VARIABLE B${index} on RES.PROC_INST_ID_ =
					B${index}.PROC_INST_ID_
				</otherwise>
			</choose>
		</foreach>

		<foreach collection="orQueryObjects" index="orIndex" item="orQueryObject">
			<if
				test="orQueryObject.processDefinitionId != null || orQueryObject.processDefinitionKey != null || orQueryObject.processDefinitionVersion != null || orQueryObject.processDefinitionCategory != null || orQueryObject.processDefinitionName != null || (orQueryObject.processDefinitionIds != null &amp;&amp; !orQueryObject.processDefinitionIds.isEmpty()) || (orQueryObject.processDefinitionKeys != null &amp;&amp; !orQueryObject.processDefinitionKeys.isEmpty())">
				inner join ${prefix}ACT_RE_PROCDEF P_OR${orIndex} on RES.PROC_DEF_ID_ =
				P_OR${orIndex}.ID_
			</if>
			<foreach collection="orQueryObject.queryVariableValues"
				index="index" item="queryVariableValue">
				left outer join ${prefix}ACT_RU_VARIABLE A_OR${orIndex}_${index} on
				RES.PROC_INST_ID_ = A_OR${orIndex}_${index}.PROC_INST_ID_
			</foreach>
			<if
				test="orQueryObject.deploymentId != null || (orQueryObject.deploymentIds != null &amp;&amp; orQueryObject.deploymentIds.size() &gt; 0)">
				left outer join ${prefix}ACT_RE_PROCDEF DEPLOY_P_OR${orIndex} ON
				RES.PROC_DEF_ID_ = DEPLOY_P_OR${orIndex}.ID_
			</if>
		</foreach>
		<if test="eventSubscriptions != null">
			<foreach collection="eventSubscriptions" index="index"
				item="eventSubscriptionValue">
				inner join ${prefix}ACT_RU_EVENT_SUBSCR EVT${index} on RES.ID_ =
				EVT${index}.EXECUTION_ID_
			</foreach>
		</if>
		<if
			test="businessKey != null and includeChildExecutionsWithBusinessKeyQuery">
			inner join ${prefix}ACT_RU_EXECUTION INST on RES.PROC_INST_ID_ = INST.ID_
		</if>
		<if
			test="deploymentId != null || (deploymentIds != null &amp;&amp; deploymentIds.size() &gt; 0)">
			left outer join ${prefix}ACT_RE_PROCDEF DEPLOY_P ON RES.PROC_DEF_ID_ =
			DEPLOY_P.ID_
		</if>
		<if test="onlyProcessInstances &amp;&amp; withJobException">
			left outer join ${prefix}ACT_RU_JOB JOB ON RES.PROC_INST_ID_ =
			JOB.PROCESS_INSTANCE_ID_
		</if>
		<where>
			<if test="onlyProcessInstances">
				RES.PARENT_ID_ is null
			</if>
			<if test="processDefinitionId != null">
				and P.ID_ = #{processDefinitionId}
			</if>
			<if
				test="processDefinitionIds != null and !processDefinitionIds.isEmpty()">
				and P.ID_ in
				<foreach item="item" index="index" collection="processDefinitionIds"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="processDefinitionKey != null">
				and P.KEY_ = #{processDefinitionKey}
			</if>
			<if
				test="processDefinitionKeys != null and !processDefinitionKeys.isEmpty()">
				and P.KEY_ in
				<foreach item="item" index="index" collection="processDefinitionKeys"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="processDefinitionCategory != null">
				and P.CATEGORY_ = #{processDefinitionCategory}
			</if>
			<if test="processDefinitionName != null">
				and P.NAME_ = #{processDefinitionName}
			</if>
			<if test="processDefinitionVersion != null">
				and P.VERSION_ = #{processDefinitionVersion}
			</if>
			<if test="executionId != null">
				and RES.ID_ = #{executionId}
			</if>
			<if test="processInstanceId != null">
				and RES.PROC_INST_ID_ = #{processInstanceId}
			</if>
			<if test="processInstanceIds != null and !processInstanceIds.isEmpty()">
				and RES.PROC_INST_ID_ in
				<foreach item="item" index="index" collection="processInstanceIds"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if
				test="businessKey != null and !includeChildExecutionsWithBusinessKeyQuery">
				and RES.BUSINESS_KEY_ = #{businessKey}
			</if>
			<if
				test="businessKey != null and includeChildExecutionsWithBusinessKeyQuery">
				and INST.BUSINESS_KEY_ = #{businessKey}
			</if>
			<if test="activityId != null">
				and RES.ACT_ID_ = #{activityId} and RES.IS_ACTIVE_ = #{isActive}
			</if>
			<if test="parentId != null">
				and RES.PARENT_ID_ = #{parentId}
			</if>
			<if test="deploymentId != null">
				and DEPLOY_P.DEPLOYMENT_ID_ = #{deploymentId}
			</if>
			<if test="deploymentIds != null &amp;&amp; deploymentIds.size() &gt; 0">
				and DEPLOY_P.DEPLOYMENT_ID_ IN
				<foreach item="deployment" index="index" collection="deploymentIds"
					open="(" separator="," close=")">
					#{deployment}
				</foreach>
			</if>
			<if test="superProcessInstanceId != null">
				<!-- A sub process instance is stored under a certain *execution*, potentially 
					nested. A sub process instance is NOT stored under the process instanc, hence 
					the following: -->
				and RES.SUPER_EXEC_ IN (select ID_ from ${prefix}ACT_RU_EXECUTION
				where PROC_INST_ID_ = #{superProcessInstanceId})
			</if>
			<if test="subProcessInstanceId != null">
				and RES.ID_ = (select PROC_INST_ID_ from ${prefix}ACT_RU_EXECUTION
				where ID_ = (select SUPER_EXEC_ from ${prefix}ACT_RU_EXECUTION where
				ID_ = #{subProcessInstanceId}))
			</if>
			<if test="excludeSubprocesses">
				and RES.SUPER_EXEC_ is null
			</if>
			<if test="suspensionState != null">
				<if test="suspensionState.stateCode == 1">
					and (RES.SUSPENSION_STATE_ = 1)
				</if>
				<if test="suspensionState.stateCode == 2">
					and (RES.SUSPENSION_STATE_ = 2)
				</if>
			</if>
			<if test="tenantId != null">
				and RES.TENANT_ID_ = #{tenantId}
			</if>
			<if test="tenantIdLike != null">
				and RES.TENANT_ID_ like #{tenantIdLike}
			</if>
			<if test="withoutTenantId">
				and (RES.TENANT_ID_ = '' or RES.TENANT_ID_ is null)
			</if>
			<if test="name != null">
				and RES.NAME_ = #{name}
			</if>
			<if test="nameLike != null">
				and RES.NAME_ like #{nameLike}
			</if>
			<if test="nameLikeIgnoreCase != null">
				and lower(RES.NAME_) like #{nameLikeIgnoreCase}
			</if>
			<if test="involvedUser != null">
				and EXISTS(select ID_ from ${prefix}ACT_RU_IDENTITYLINK I where
				I.PROC_INST_ID_ = RES.ID_ and I.USER_ID_ = #{involvedUser})
			</if>
			<!-- PLEASE NOTE: If you change anything have a look into the HistoricVariableInstance 
				& HistoricProcessInstance, the same query object is used there! -->
			<foreach collection="queryVariableValues" index="index"
				item="queryVariableValue">
				<if test="!queryVariableValue.local">
					<!-- When process instance variable is queried for, only process variables 
						are taken into account -->
					and A${index}.EXECUTION_ID_ = A${index}.PROC_INST_ID_
				</if>
				<if test="queryVariableValue.name != null">
					<!-- Match-all variable-names when name is null -->
					and A${index}.NAME_= #{queryVariableValue.name}
				</if>
				<if test="!queryVariableValue.type.equals('null')">
					<!-- When operator is not-equals or type of value is null, type doesn't 
						matter! -->
					and A${index}.TYPE_ = #{queryVariableValue.type}
				</if>
				<if
					test="queryVariableValue.textValue != null &amp;&amp; queryVariableValue.longValue == null &amp;&amp; queryVariableValue.doubleValue == null">
					<choose>
						<when
							test="queryVariableValue.operator.equals('EQUALS_IGNORE_CASE') || queryVariableValue.operator.equals('NOT_EQUALS_IGNORE_CASE') || queryVariableValue.operator.equals('LIKE_IGNORE_CASE')">
							and lower(A${index}.TEXT_)
						</when>
						<otherwise>
							and A${index}.TEXT_
						</otherwise>
					</choose>
					<choose>
						<when
							test="queryVariableValue.operator.equals('LIKE') || queryVariableValue.operator.equals('LIKE_IGNORE_CASE')">LIKE</when>
						<otherwise>
							<include
								refid="org.activiti.engine.impl.persistence.entity.ExecutionEntity.executionVariableOperator" />
						</otherwise>
					</choose>
					#{queryVariableValue.textValue}
				</if>
				<if test="queryVariableValue.textValue2 != null">
					and A${index}.TEXT2_
					<choose>
						<when test="queryVariableValue.operator.equals('LIKE')">LIKE</when>
						<otherwise>
							<include
								refid="org.activiti.engine.impl.persistence.entity.ExecutionEntity.executionVariableOperator" />
						</otherwise>
					</choose>
					#{queryVariableValue.textValue2}
				</if>
				<if test="queryVariableValue.longValue != null">
					and A${index}.LONG_
					<include
						refid="org.activiti.engine.impl.persistence.entity.ExecutionEntity.executionVariableOperator" />
					#{queryVariableValue.longValue}
				</if>
				<if test="queryVariableValue.doubleValue != null">
					and A${index}.DOUBLE_
					<include
						refid="org.activiti.engine.impl.persistence.entity.ExecutionEntity.executionVariableOperator" />
					#{queryVariableValue.doubleValue}
				</if>
				<!-- Null variable type -->
				<if
					test="queryVariableValue.textValue == null &amp;&amp; queryVariableValue.textValue2 == null &amp;&amp; queryVariableValue.longValue == null &amp;&amp; queryVariableValue.doubleValue == null">
					<choose>
						<when test="queryVariableValue.operator.equals('NOT_EQUALS')">
							and (A${index}.TEXT_ is not null or A${index}.TEXT2_ is not null or
							A${index}.LONG_ is not null or A${index}.DOUBLE_ is not null or
							A${index}.BYTEARRAY_ID_ is not null)
						</when>
						<otherwise>
							and A${index}.TEXT_ is null and A${index}.TEXT2_ is null and
							A${index}.LONG_ is null and A${index}.DOUBLE_ is null and
							A${index}.BYTEARRAY_ID_ is null
						</otherwise>
					</choose>
				</if>
			</foreach>
			
			<foreach collection="variables" index="index"
				item="queryVariableValue">
				<if test="!queryVariableValue.local">
					<!-- When process instance variable is queried for, only process variables 
						are taken into account -->
					and B${index}.EXECUTION_ID_ = B${index}.PROC_INST_ID_
				</if>
				<if test="queryVariableValue.name != null">
					<!-- Match-all variable-names when name is null -->
					and B${index}.NAME_ LIKE #{queryVariableValue.name}
				</if>
				<if test="!queryVariableValue.type.equals('null')">
					<!-- When operator is not-equals or type of value is null, type doesn't 
						matter! -->
					and B${index}.TYPE_ = #{queryVariableValue.type}
				</if>
				<if
					test="queryVariableValue.textValue != null &amp;&amp; queryVariableValue.longValue == null &amp;&amp; queryVariableValue.doubleValue == null">
					<choose>
						<when
							test="queryVariableValue.operator.equals('EQUALS_IGNORE_CASE') || queryVariableValue.operator.equals('NOT_EQUALS_IGNORE_CASE') || queryVariableValue.operator.equals('LIKE_IGNORE_CASE')">
							and lower(B${index}.TEXT_)
						</when>
						<otherwise>
							and B${index}.TEXT_
						</otherwise>
					</choose>
					<choose>
						<when
							test="queryVariableValue.operator.equals('LIKE') || queryVariableValue.operator.equals('LIKE_IGNORE_CASE')">LIKE</when>
						<otherwise>
							<include
								refid="org.activiti.engine.impl.persistence.entity.ExecutionEntity.executionVariableOperator" />
						</otherwise>
					</choose>
					#{queryVariableValue.textValue}
				</if>
				<if test="queryVariableValue.textValue2 != null">
					and B${index}.TEXT2_
					<choose>
						<when test="queryVariableValue.operator.equals('LIKE')">LIKE</when>
						<otherwise>
							<include
								refid="org.activiti.engine.impl.persistence.entity.ExecutionEntity.executionVariableOperator" />
						</otherwise>
					</choose>
					#{queryVariableValue.textValue2}
				</if>
				<if test="queryVariableValue.longValue != null">
					and B${index}.LONG_
					<include
						refid="org.activiti.engine.impl.persistence.entity.ExecutionEntity.executionVariableOperator" />
					#{queryVariableValue.longValue}
				</if>
				<if test="queryVariableValue.doubleValue != null">
					and B${index}.DOUBLE_
					<include
						refid="org.activiti.engine.impl.persistence.entity.ExecutionEntity.executionVariableOperator" />
					#{queryVariableValue.doubleValue}
				</if>
				<!-- Null variable type -->
				<if
					test="queryVariableValue.textValue == null &amp;&amp; queryVariableValue.textValue2 == null &amp;&amp; queryVariableValue.longValue == null &amp;&amp; queryVariableValue.doubleValue == null">
					<choose>
						<when test="queryVariableValue.operator.equals('NOT_EQUALS')">
							and (B${index}.TEXT_ is not null or B${index}.TEXT2_ is not null or
							B${index}.LONG_ is not null or B${index}.DOUBLE_ is not null or
							B${index}.BYTEARRAY_ID_ is not null)
						</when>
						<otherwise>
							and B${index}.TEXT_ is null and B${index}.TEXT2_ is null and
							B${index}.LONG_ is null and B${index}.DOUBLE_ is null and
							B${index}.BYTEARRAY_ID_ is null
						</otherwise>
					</choose>
				</if>
			</foreach>
			
			<!-- event subscriptions -->
			<if test="eventSubscriptions != null">
				<foreach collection="eventSubscriptions" index="index"
					item="eventSubscriptionValue">
					and (EVT${index}.EVENT_TYPE_ = #{eventSubscriptionValue.eventType} and
					EVT${index}.EVENT_NAME_ = #{eventSubscriptionValue.eventName})
				</foreach>
			</if>
			<foreach item="orQueryObject" index="orIndex" collection="orQueryObjects">
				and
				<trim prefix="(" prefixOverrides="OR" suffix=")">
					<if test="orQueryObject.processDefinitionId != null">
						P_OR${orIndex}.ID_ = #{orQueryObject.processDefinitionId}
					</if>
					<if
						test="orQueryObject.processDefinitionIds != null and !orQueryObject.processDefinitionIds.isEmpty()">
						or P_OR${orIndex}.ID_ in
						<foreach item="item" index="index"
							collection="orQueryObject.processDefinitionIds" open="("
							separator="," close=")">
							#{item}
						</foreach>
					</if>
					<if test="orQueryObject.processDefinitionKey != null">
						or P_OR${orIndex}.KEY_ = #{orQueryObject.processDefinitionKey}
					</if>
					<if
						test="orQueryObject.processDefinitionKeys != null and !orQueryObject.processDefinitionKeys.isEmpty()">
						or P_OR${orIndex}.KEY_ in
						<foreach item="item" index="index"
							collection="orQueryObject.processDefinitionKeys" open="("
							separator="," close=")">
							#{item}
						</foreach>
					</if>
					<if test="orQueryObject.processDefinitionCategory != null">
						or P_OR${orIndex}.CATEGORY_ =
						#{orQueryObject.processDefinitionCategory}
					</if>
					<if test="orQueryObject.processDefinitionName != null">
						or P_OR${orIndex}.NAME_ = #{orQueryObject.processDefinitionName}
					</if>
					<if test="orQueryObject.processDefinitionVersion != null">
						or P_OR${orIndex}.VERSION_ =
						#{orQueryObject.processDefinitionVersion}
					</if>
					<if test="orQueryObject.executionId != null">
						or RES.ID_ = #{orQueryObject.executionId}
					</if>
					<if test="orQueryObject.processInstanceId != null">
						or RES.PROC_INST_ID_ = #{orQueryObject.processInstanceId}
					</if>
					<if
						test="orQueryObject.processInstanceIds != null and !orQueryObject.processInstanceIds.isEmpty()">
						or RES.PROC_INST_ID_ in
						<foreach item="item" index="index"
							collection="orQueryObject.processInstanceIds" open="(" separator=","
							close=")">
							#{item}
						</foreach>
					</if>
					<if test="orQueryObject.businessKey != null">
						or RES.BUSINESS_KEY_ = #{orQueryObject.businessKey}
					</if>
					<if test="orQueryObject.activityId != null">
						or (RES.ACT_ID_ = #{orQueryObject.activityId} and RES.IS_ACTIVE_ =
						#{isActive})
					</if>
					<if test="orQueryObject.parentId != null">
						or RES.PARENT_ID_ = #{orQueryObject.parentId}
					</if>
					<if test="orQueryObject.deploymentId != null">
						or DEPLOY_P_OR${orIndex}.DEPLOYMENT_ID_ =
						#{orQueryObject.deploymentId}
					</if>
					<if
						test="orQueryObject.deploymentIds != null &amp;&amp; orQueryObject.deploymentIds.size() &gt; 0">
						or DEPLOY_P_OR${orIndex}.DEPLOYMENT_ID_ IN
						<foreach item="deployment" index="index"
							collection="orQueryObject.deploymentIds" open="(" separator=","
							close=")">
							#{deployment}
						</foreach>
					</if>
					<if test="orQueryObject.superProcessInstanceId != null">
						<!-- A sub process instance is stored under a certain *execution*, 
							potentially nested. A sub process instance is NOT stored under the process 
							instanc, hence the following: -->
						or RES.SUPER_EXEC_ IN (select ID_ from ${prefix}ACT_RU_EXECUTION
						where PROC_INST_ID_ = #{orQueryObject.superProcessInstanceId})
					</if>
					<if test="orQueryObject.subProcessInstanceId != null">
						or RES.ID_ = (select PROC_INST_ID_ from ${prefix}ACT_RU_EXECUTION
						where ID_ = (select SUPER_EXEC_ from ${prefix}ACT_RU_EXECUTION
						where ID_ = #{orQueryObject.subProcessInstanceId}))
					</if>
					<if test="orQueryObject.excludeSubprocesses">
						or RES.SUPER_EXEC_ is null
					</if>
					<if test="orQueryObject.suspensionState != null">
						<if test="orQueryObject.suspensionState.stateCode == 1">
							or (RES.SUSPENSION_STATE_ = 1)
						</if>
						<if test="orQueryObject.suspensionState.stateCode == 2">
							or (RES.SUSPENSION_STATE_ = 2)
						</if>
					</if>
					<if test="orQueryObject.tenantId != null">
						or RES.TENANT_ID_ = #{orQueryObject.tenantId}
					</if>
					<if test="orQueryObject.tenantIdLike != null">
						or RES.TENANT_ID_ like #{orQueryObject.tenantIdLike}
					</if>
					<if test="orQueryObject.withoutTenantId">
						or (RES.TENANT_ID_ = '' or RES.TENANT_ID_ is null)
					</if>
					<if test="orQueryObject.name != null">
						or RES.NAME_ = #{orQueryObject.name}
					</if>
					<if test="orQueryObject.nameLike != null">
						or RES.NAME_ like #{orQueryObject.nameLike}
					</if>
					<if test="orQueryObject.nameLikeIgnoreCase != null">
						or lower(RES.NAME_) like #{orQueryObject.nameLikeIgnoreCase}
					</if>
					<if test="orQueryObject.involvedUser != null">
						or EXISTS(select ID_ from ${prefix}ACT_RU_IDENTITYLINK I where
						I.PROC_INST_ID_ = RES.ID_ and I.USER_ID_ =
						#{orQueryObject.involvedUser})
					</if>
					<!-- PLEASE NOTE: If you change anything have a look into the HistoricVariableInstance 
						& HistoricProcessInstance, the same query object is used there! -->
					<foreach collection="orQueryObject.queryVariableValues"
						index="index" item="queryVariableValue">
						or
						<trim prefix="(" prefixOverrides="AND" suffix=")">
							<if test="!queryVariableValue.local">
								<!-- When process instance variable is queried for, only process 
									variables are taken into account -->
								and A_OR${orIndex}_${index}.EXECUTION_ID_ =
								A_OR${orIndex}_${index}.PROC_INST_ID_
							</if>
							<if test="queryVariableValue.name != null">
								<!-- Match-all variable-names when name is null -->
								and A_OR${orIndex}_${index}.NAME_= #{queryVariableValue.name}
							</if>
							<if test="!queryVariableValue.type.equals('null')">
								<!-- When operator is not-equals or type of value is null, type doesn't 
									matter! -->
								and A_OR${orIndex}_${index}.TYPE_ = #{queryVariableValue.type}
							</if>
							<if
								test="queryVariableValue.textValue != null &amp;&amp; queryVariableValue.longValue == null &amp;&amp; queryVariableValue.doubleValue == null">
								<choose>
									<when
										test="queryVariableValue.operator.equals('EQUALS_IGNORE_CASE') || queryVariableValue.operator.equals('NOT_EQUALS_IGNORE_CASE') || queryVariableValue.operator.equals('LIKE_IGNORE_CASE')">
										and lower(A_OR${orIndex}_${index}.TEXT_)
									</when>
									<otherwise>
										and A_OR${orIndex}_${index}.TEXT_
									</otherwise>
								</choose>
								<choose>
									<when
										test="queryVariableValue.operator.equals('LIKE') || queryVariableValue.operator.equals('LIKE_IGNORE_CASE')">LIKE</when>
									<otherwise>
										<include
											refid="org.activiti.engine.impl.persistence.entity.ExecutionEntity.executionVariableOperator" />
									</otherwise>
								</choose>
								#{queryVariableValue.textValue}
							</if>
							<if test="queryVariableValue.textValue2 != null">
								and A_OR${orIndex}_${index}.TEXT2_
								<choose>
									<when test="queryVariableValue.operator.equals('LIKE')">LIKE</when>
									<otherwise>
										<include
											refid="org.activiti.engine.impl.persistence.entity.ExecutionEntity.executionVariableOperator" />
									</otherwise>
								</choose>
								#{queryVariableValue.textValue2}
							</if>
							<if test="queryVariableValue.longValue != null">
								and A_OR${orIndex}_${index}.LONG_
								<include
									refid="org.activiti.engine.impl.persistence.entity.ExecutionEntity.executionVariableOperator" />
								#{queryVariableValue.longValue}
							</if>
							<if test="queryVariableValue.doubleValue != null">
								and A_OR${orIndex}_${index}.DOUBLE_
								<include
									refid="org.activiti.engine.impl.persistence.entity.ExecutionEntity.executionVariableOperator" />
								#{queryVariableValue.doubleValue}
							</if>
							<!-- Null variable type -->
							<if
								test="queryVariableValue.textValue == null &amp;&amp; queryVariableValue.textValue2 == null &amp;&amp; queryVariableValue.longValue == null &amp;&amp; queryVariableValue.doubleValue == null">
								<choose>
									<when test="queryVariableValue.operator.equals('NOT_EQUALS')">
										and (A_OR${orIndex}_${index}.TEXT_ is not null or
										A_OR${orIndex}_${index}.TEXT2_ is not null or
										A_OR${orIndex}_${index}.LONG_ is not null or
										A_OR${orIndex}_${index}.DOUBLE_ is not null or
										A_OR${orIndex}_${index}.BYTEARRAY_ID_ is not null)
									</when>
									<otherwise>
										and A_OR${orIndex}_${index}.TEXT_ is null and
										A_OR${orIndex}_${index}.TEXT2_ is null and
										A_OR${orIndex}_${index}.LONG_ is null and
										A_OR${orIndex}_${index}.DOUBLE_ is null and
										A_OR${orIndex}_${index}.BYTEARRAY_ID_ is null
									</otherwise>
								</choose>
							</if>
						</trim>
					</foreach>
				</trim>
			</foreach>
			<if test="onlyProcessInstances &amp;&amp; withJobException">
				and (JOB.EXCEPTION_MSG_ is not null or JOB.EXCEPTION_STACK_ID_ is not
				null)
			</if>
		</where>
	</sql>


	<select id="selectHistoricProcessInstancesByQueryCriteriaGunix"
		parameterType="org.activiti.engine.impl.GunixVariableHistoricProcessInstanceQuery"
		resultMap="org.activiti.engine.impl.persistence.entity.HistoricProcessInstanceEntity.historicProcessInstanceResultMap">
		${limitBefore}
		select distinct RES.* ${limitBetween}, DEF.KEY_ as
		PROC_DEF_KEY_, DEF.NAME_
		as PROC_DEF_NAME_, DEF.VERSION_ as
		PROC_DEF_VERSION_,
		DEF.DEPLOYMENT_ID_ as DEPLOYMENT_ID_
		<include refid="selectHistoricProcessInstancesByQueryCriteriaSql" />
		${orderBy}
		${limitAfter}
	</select>
	<sql id="selectHistoricProcessInstancesByQueryCriteriaSql">
		from ${prefix}ACT_HI_PROCINST RES
		left outer join
		${prefix}ACT_RE_PROCDEF DEF on RES.PROC_DEF_ID_ = DEF.ID_
		<include refid="commonSelectHistoricProcessInstancesByQueryCriteriaSql" />
	</sql>
	<sql id="commonSelectHistoricProcessInstancesByQueryCriteriaSql">
		<foreach collection="queryVariableValues" index="index"
			item="queryVariableValue">
			inner join ${prefix}ACT_HI_VARINST A${index} on
			RES.PROC_INST_ID_ =
			A${index}.PROC_INST_ID_
		</foreach>
		<foreach collection="variables" index="index" item="queryVariableValue">
			inner join
			${prefix}ACT_HI_VARINST B${index} on RES.PROC_INST_ID_ =
			B${index}.PROC_INST_ID_
		</foreach>
		<foreach collection="orQueryObjects" index="orIndex" item="orQueryObject">
			<if
				test="orQueryObject.processKeyNotIn != null || orQueryObject.processDefinitionKey != null || orQueryObject.processDefinitionCategory != null || orQueryObject.processDefinitionName != null || orQueryObject.processDefinitionVersion != null || (orQueryObject.processDefinitionKeyIn != null &amp;&amp; orQueryObject.processDefinitionKeyIn.size() &gt; 0)">
				inner join ${prefix}ACT_RE_PROCDEF DEF_OR${orIndex} on
				RES.PROC_DEF_ID_ =
				DEF_OR${orIndex}.ID_
			</if>
			<if
				test="orQueryObject.deploymentId != null || (orQueryObject.deploymentIds != null &amp;&amp; orQueryObject.deploymentIds.size() &gt; 0)">
				left outer join ${prefix}ACT_RE_PROCDEF DEPLOY_P_OR${orIndex}
				ON
				RES.PROC_DEF_ID_ = DEPLOY_P_OR${orIndex}.ID_
			</if>
			<foreach collection="orQueryObject.queryVariableValues"
				index="index" item="queryVariableValue">
				left outer join ${prefix}ACT_HI_VARINST
				A_OR${orIndex}_${index} on
				RES.PROC_INST_ID_ =
				A_OR${orIndex}_${index}.PROC_INST_ID_
			</foreach>
		</foreach>
		<if
			test="deploymentId != null || (deploymentIds != null &amp;&amp; deploymentIds.size() &gt; 0)">
			left outer join ${prefix}ACT_RE_PROCDEF DEPLOY_P ON
			RES.PROC_DEF_ID_ =
			DEPLOY_P.ID_
		</if>
		<if test="withJobException">
			left outer join ${prefix}ACT_RU_JOB JOB ON
			RES.PROC_INST_ID_ =
			JOB.PROCESS_INSTANCE_ID_
		</if>
		<where>
			<if test="processInstanceId != null">
				RES.PROC_INST_ID_ = #{processInstanceId}
			</if>
			<if test="processInstanceIds != null and !processInstanceIds.isEmpty()">
				and RES.PROC_INST_ID_ in
				<foreach item="item" index="index" collection="processInstanceIds"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="processDefinitionId != null">
				and RES.PROC_DEF_ID_ = #{processDefinitionId}
			</if>
			<if test="processDefinitionKey != null">
				and DEF.KEY_ = #{processDefinitionKey}
			</if>
			<if
				test="processDefinitionKeyIn != null &amp;&amp; processDefinitionKeyIn.size() &gt; 0">
				and DEF.KEY_ IN
				<foreach item="definition" index="index" collection="processDefinitionKeyIn"
					open="(" separator="," close=")">
					#{definition}
				</foreach>
			</if>
			<if test="processDefinitionVersion != null">
				and DEF.VERSION_ = #{processDefinitionVersion}
			</if>
			<if test="processDefinitionCategory != null">
				and DEF.CATEGORY_ = #{processDefinitionCategory}
			</if>
			<if test="processDefinitionName != null">
				and DEF.NAME_ = #{processDefinitionName}
			</if>
			<if test="businessKey != null">
				and RES.BUSINESS_KEY_ = #{businessKey}
			</if>
			<if test="deploymentId != null">
				and DEPLOY_P.DEPLOYMENT_ID_ = #{deploymentId}
			</if>
			<if test="deploymentIds != null &amp;&amp; deploymentIds.size() &gt; 0">
				and DEPLOY_P.DEPLOYMENT_ID_ IN
				<foreach item="deployment" index="index" collection="deploymentIds"
					open="(" separator="," close=")">
					#{deployment}
				</foreach>
			</if>
			<if test="startedBefore != null">
				and RES.START_TIME_ &lt;= #{startedBefore}
			</if>
			<if test="startedAfter != null">
				and RES.START_TIME_ &gt;= #{startedAfter}
			</if>
			<if test="finishedBefore != null">
				and RES.END_TIME_ &lt;= #{finishedBefore}
			</if>
			<if test="finishedAfter != null">
				and RES.END_TIME_ &gt;= #{finishedAfter}
			</if>
			<if test="processKeyNotIn != null">
				<foreach collection="processKeyNotIn" index="index" item="procDefKey">
					and DEF.KEY_ not like #{procDefKey}
				</foreach>
			</if>
			<if test="unfinished">
				and RES.END_TIME_ IS NULL
			</if>
			<if test="finished">
				and RES.END_TIME_ is not NULL
			</if>
			<if test="notDeleted">
				and RES.DELETE_REASON_ IS NULL
			</if>
			<if test="deleted">
				and RES.DELETE_REASON_ IS NOT NULL
			</if>
			<if test="involvedUser != null">
				and (
				exists(select LINK.USER_ID_ from
				${prefix}ACT_HI_IDENTITYLINK LINK where USER_ID_
				= #{involvedUser}
				and LINK.PROC_INST_ID_ = RES.ID_)
				)
			</if>
			<if test="startedBy != null">
				and RES.START_USER_ID_ = #{startedBy}
			</if>
			<if test="superProcessInstanceId != null">
				and RES.SUPER_PROCESS_INSTANCE_ID_ =
				#{superProcessInstanceId}
			</if>
			<if test="excludeSubprocesses">
				and RES.SUPER_PROCESS_INSTANCE_ID_ is null
			</if>
			<if test="tenantId != null">
				and RES.TENANT_ID_ = #{tenantId}
			</if>
			<if test="tenantIdLike != null">
				and RES.TENANT_ID_ like #{tenantIdLike}
			</if>
			<if test="withoutTenantId">
				and (RES.TENANT_ID_ = '' or RES.TENANT_ID_ is null)
			</if>
			<if test="name != null">
				and RES.NAME_ = #{name}
			</if>
			<if test="nameLike != null">
				and RES.NAME_ like #{nameLike}
			</if>
			<if test="nameLikeIgnoreCase != null">
				and lower(RES.NAME_) like #{nameLikeIgnoreCase}
			</if>
			<foreach collection="queryVariableValues" index="index"
				item="queryVariableValue">
				<if test="queryVariableValue.name != null">
					<!-- Match-all variable-names when name is null -->
					and A${index}.NAME_= #{queryVariableValue.name}
				</if>
				<if test="!queryVariableValue.type.equals('null')">
					<!-- When operator is not-equals or type of value is null, type doesn't 
						matter! -->
					and A${index}.VAR_TYPE_ = #{queryVariableValue.type}
				</if>
				<if
					test="queryVariableValue.textValue != null &amp;&amp; queryVariableValue.longValue == null &amp;&amp; queryVariableValue.doubleValue == null">
					<choose>
						<when
							test="queryVariableValue.operator.equals('EQUALS_IGNORE_CASE') || queryVariableValue.operator.equals('NOT_EQUALS_IGNORE_CASE') || queryVariableValue.operator.equals('LIKE_IGNORE_CASE')">
							and lower(A${index}.TEXT_)
						</when>
						<otherwise>
							and A${index}.TEXT_
						</otherwise>
					</choose>
					<choose>
						<when
							test="queryVariableValue.operator.equals('LIKE') || queryVariableValue.operator.equals('LIKE_IGNORE_CASE')">LIKE</when>
						<otherwise>
							<include
								refid="org.activiti.engine.impl.persistence.entity.HistoricProcessInstanceEntity.executionVariableOperator" />
						</otherwise>
					</choose>
					#{queryVariableValue.textValue}
				</if>
				<if test="queryVariableValue.textValue2 != null">
					and A${index}.TEXT2_
					<choose>
						<when test="queryVariableValue.operator.equals('LIKE')">LIKE</when>
						<otherwise>
							<include
								refid="org.activiti.engine.impl.persistence.entity.HistoricProcessInstanceEntity.executionVariableOperator" />
						</otherwise>
					</choose>
					#{queryVariableValue.textValue2}
				</if>
				<if test="queryVariableValue.longValue != null">
					and A${index}.LONG_
					<include
						refid="org.activiti.engine.impl.persistence.entity.HistoricProcessInstanceEntity.executionVariableOperator" />
					#{queryVariableValue.longValue}
				</if>
				<if test="queryVariableValue.doubleValue != null">
					and A${index}.DOUBLE_
					<include
						refid="org.activiti.engine.impl.persistence.entity.HistoricProcessInstanceEntity.executionVariableOperator" />
					#{queryVariableValue.doubleValue}
				</if>
				<!-- Null variable type -->
				<if
					test="queryVariableValue.textValue == null &amp;&amp; queryVariableValue.textValue2 == null &amp;&amp; queryVariableValue.longValue == null &amp;&amp; queryVariableValue.doubleValue == null">
					<choose>
						<when test="queryVariableValue.operator.equals('NOT_EQUALS')">
							and (A${index}.TEXT_ is not null or
							A${index}.TEXT2_ is not null or
							A${index}.LONG_ is not null or
							A${index}.DOUBLE_ is not null or
							A${index}.BYTEARRAY_ID_ is not
							null)
						</when>
						<otherwise>
							and A${index}.TEXT_ is null and A${index}.TEXT2_ is
							null and
							A${index}.LONG_ is null and A${index}.DOUBLE_ is null and
							A${index}.BYTEARRAY_ID_ is null
						</otherwise>
					</choose>
				</if>
			</foreach>

			<foreach collection="variables" index="index" item="queryVariableValue">
				<if test="queryVariableValue.name != null">
					<!-- Match-all variable-names when name is null -->
					and B${index}.NAME_ LIKE #{queryVariableValue.name}
				</if>
				<if test="!queryVariableValue.type.equals('null')">
					<!-- When operator is not-equals or type of value is null, type doesn't 
						matter! -->
					and B${index}.VAR_TYPE_ = #{queryVariableValue.type}
				</if>
				<if
					test="queryVariableValue.textValue != null &amp;&amp; queryVariableValue.longValue == null &amp;&amp; queryVariableValue.doubleValue == null">
					<choose>
						<when
							test="queryVariableValue.operator.equals('EQUALS_IGNORE_CASE') || queryVariableValue.operator.equals('NOT_EQUALS_IGNORE_CASE') || queryVariableValue.operator.equals('LIKE_IGNORE_CASE')">
							and lower(B${index}.TEXT_)
						</when>
						<otherwise>
							and B${index}.TEXT_
						</otherwise>
					</choose>
					<choose>
						<when
							test="queryVariableValue.operator.equals('LIKE') || queryVariableValue.operator.equals('LIKE_IGNORE_CASE')">LIKE</when>
						<otherwise>
							<include
								refid="org.activiti.engine.impl.persistence.entity.HistoricProcessInstanceEntity.executionVariableOperator" />
						</otherwise>
					</choose>
					#{queryVariableValue.textValue}
				</if>
				<if test="queryVariableValue.textValue2 != null">
					and B${index}.TEXT2_
					<choose>
						<when test="queryVariableValue.operator.equals('LIKE')">LIKE</when>
						<otherwise>
							<include
								refid="org.activiti.engine.impl.persistence.entity.HistoricProcessInstanceEntity.executionVariableOperator" />
						</otherwise>
					</choose>
					#{queryVariableValue.textValue2}
				</if>
				<if test="queryVariableValue.longValue != null">
					and B${index}.LONG_
					<include
						refid="org.activiti.engine.impl.persistence.entity.HistoricProcessInstanceEntity.executionVariableOperator" />
					#{queryVariableValue.longValue}
				</if>
				<if test="queryVariableValue.doubleValue != null">
					and B${index}.DOUBLE_
					<include
						refid="org.activiti.engine.impl.persistence.entity.HistoricProcessInstanceEntity.executionVariableOperator" />
					#{queryVariableValue.doubleValue}
				</if>
				<!-- Null variable type -->
				<if
					test="queryVariableValue.textValue == null &amp;&amp; queryVariableValue.textValue2 == null &amp;&amp; queryVariableValue.longValue == null &amp;&amp; queryVariableValue.doubleValue == null">
					<choose>
						<when test="queryVariableValue.operator.equals('NOT_EQUALS')">
							and (B${index}.TEXT_ is not null or
							B${index}.TEXT2_ is not null or
							B${index}.LONG_ is not null or
							B${index}.DOUBLE_ is not null or
							B${index}.BYTEARRAY_ID_ is not
							null)
						</when>
						<otherwise>
							and B${index}.TEXT_ is null and B${index}.TEXT2_ is
							null and
							B${index}.LONG_ is null and B${index}.DOUBLE_ is null and
							B${index}.BYTEARRAY_ID_ is null
						</otherwise>
					</choose>
				</if>
			</foreach>

			<foreach item="orQueryObject" index="orIndex" collection="orQueryObjects">
				and
				<trim prefix="(" prefixOverrides="OR" suffix=")">
					<if test="orQueryObject.processInstanceId != null">
						RES.PROC_INST_ID_ = #{orQueryObject.processInstanceId}
					</if>
					<if
						test="orQueryObject.processInstanceIds != null and !orQueryObject.processInstanceIds.isEmpty()">
						or RES.PROC_INST_ID_ in
						<foreach item="item" index="index"
							collection="orQueryObject.processInstanceIds" open="(" separator=","
							close=")">
							#{item}
						</foreach>
					</if>
					<if test="orQueryObject.processDefinitionId != null">
						or RES.PROC_DEF_ID_ =
						#{orQueryObject.processDefinitionId}
					</if>
					<if test="orQueryObject.processDefinitionKey != null">
						or DEF_OR${orIndex}.KEY_ =
						#{orQueryObject.processDefinitionKey}
					</if>
					<if
						test="orQueryObject.processDefinitionKeyIn != null &amp;&amp; orQueryObject.processDefinitionKeyIn.size() &gt; 0">
						or DEF_OR${orIndex}.KEY_ IN
						<foreach item="definition" index="index"
							collection="orQueryObject.processDefinitionKeyIn" open="("
							separator="," close=")">
							#{definition}
						</foreach>
					</if>
					<if test="orQueryObject.processDefinitionVersion != null">
						or DEF_OR${orIndex}.VERSION_ =
						#{orQueryObject.processDefinitionVersion}
					</if>
					<if test="orQueryObject.processDefinitionCategory != null">
						or DEF_OR${orIndex}.CATEGORY_ =
						#{orQueryObject.processDefinitionCategory}
					</if>
					<if test="orQueryObject.processDefinitionName != null">
						or DEF_OR${orIndex}.NAME_ =
						#{orQueryObject.processDefinitionName}
					</if>
					<if test="orQueryObject.businessKey != null">
						or RES.BUSINESS_KEY_ = #{orQueryObject.businessKey}
					</if>
					<if test="orQueryObject.deploymentId != null">
						or DEPLOY_P_OR${orIndex}.DEPLOYMENT_ID_ =
						#{orQueryObject.deploymentId}
					</if>
					<if
						test="orQueryObject.deploymentIds != null &amp;&amp; orQueryObject.deploymentIds.size() &gt; 0">
						or DEPLOY_P_OR${orIndex}.DEPLOYMENT_ID_ IN
						<foreach item="deployment" index="index"
							collection="orQueryObject.deploymentIds" open="(" separator=","
							close=")">
							#{deployment}
						</foreach>
					</if>
					<if test="orQueryObject.startedBefore != null">
						or RES.START_TIME_ &lt;= #{orQueryObject.startedBefore}
					</if>
					<if test="orQueryObject.startedAfter != null">
						or RES.START_TIME_ &gt;= #{orQueryObject.startedAfter}
					</if>
					<if test="orQueryObject.finishedBefore != null">
						or (RES.END_TIME_ is not NULL and RES.END_TIME_ &lt;=
						#{orQueryObject.finishedBefore})
					</if>
					<if test="orQueryObject.finishedAfter != null">
						or (RES.END_TIME_ is not NULL and RES.END_TIME_ &gt;=
						#{orQueryObject.finishedAfter})
					</if>
					<if test="orQueryObject.processKeyNotIn != null">
						or
						<trim prefix="(" prefixOverrides="AND" suffix=")">
							<foreach collection="orQueryObject.processKeyNotIn"
								index="index" item="procDefKey">
								and DEF_OR${orIndex}.KEY_ not like
								#{procDefKey}
							</foreach>
						</trim>
					</if>
					<if test="orQueryObject.unfinished">
						or RES.END_TIME_ IS NULL
					</if>
					<if test="orQueryObject.finished">
						or RES.END_TIME_ is not NULL
					</if>
					<if test="orQueryObject.notDeleted">
						or RES.DELETE_REASON_ IS NULL
					</if>
					<if test="orQueryObject.deleted">
						or RES.DELETE_REASON_ IS NOT NULL
					</if>
					<if test="orQueryObject.involvedUser != null">
						or (
						exists(select LINK.USER_ID_ from
						${prefix}ACT_HI_IDENTITYLINK LINK where
						USER_ID_ =
						#{orQueryObject.involvedUser} and LINK.PROC_INST_ID_ =
						RES.ID_)
						)
					</if>
					<if test="orQueryObject.startedBy != null">
						or RES.START_USER_ID_ = #{orQueryObject.startedBy}
					</if>
					<if test="orQueryObject.superProcessInstanceId != null">
						or RES.SUPER_PROCESS_INSTANCE_ID_ =
						#{orQueryObject.superProcessInstanceId}
					</if>
					<if test="orQueryObject.excludeSubprocesses">
						or RES.SUPER_PROCESS_INSTANCE_ID_ is null
					</if>
					<if test="orQueryObject.tenantId != null">
						or RES.TENANT_ID_ = #{orQueryObject.tenantId}
					</if>
					<if test="orQueryObject.tenantIdLike != null">
						or RES.TENANT_ID_ like #{orQueryObject.tenantIdLike}
					</if>
					<if test="orQueryObject.withoutTenantId">
						or (RES.TENANT_ID_ = '' or RES.TENANT_ID_ is null)
					</if>
					<if test="orQueryObject.name != null">
						or RES.NAME_ = #{orQueryObject.name}
					</if>
					<if test="orQueryObject.nameLike != null">
						or RES.NAME_ like #{orQueryObject.nameLike}
					</if>
					<if test="orQueryObject.nameLikeIgnoreCase != null">
						or lower(RES.NAME_) like
						#{orQueryObject.nameLikeIgnoreCase}
					</if>
					<foreach collection="orQueryObject.queryVariableValues"
						index="index" item="queryVariableValue">
						or
						<trim prefix="(" prefixOverrides="AND" suffix=")">
							<if test="queryVariableValue.name != null">
								<!-- Match-all variable-names when name is null -->
								and A_OR${orIndex}_${index}.NAME_= #{queryVariableValue.name}
							</if>
							<if test="!queryVariableValue.type.equals('null')">
								<!-- When operator is not-equals or type of value is null, type doesn't 
									matter! -->
								and A_OR${orIndex}_${index}.VAR_TYPE_ =
								#{queryVariableValue.type}
							</if>
							<if
								test="queryVariableValue.textValue != null &amp;&amp; queryVariableValue.longValue == null &amp;&amp; queryVariableValue.doubleValue == null">
								<choose>
									<when
										test="queryVariableValue.operator.equals('EQUALS_IGNORE_CASE') || queryVariableValue.operator.equals('NOT_EQUALS_IGNORE_CASE') || queryVariableValue.operator.equals('LIKE_IGNORE_CASE')">
										and lower(A_OR${orIndex}_${index}.TEXT_)
									</when>
									<otherwise>
										and A_OR${orIndex}_${index}.TEXT_
									</otherwise>
								</choose>
								<choose>
									<when
										test="queryVariableValue.operator.equals('LIKE') || queryVariableValue.operator.equals('LIKE_IGNORE_CASE')">LIKE</when>
									<otherwise>
										<include
											refid="org.activiti.engine.impl.persistence.entity.HistoricProcessInstanceEntity.executionVariableOperator" />
									</otherwise>
								</choose>
								#{queryVariableValue.textValue}
							</if>
							<if test="queryVariableValue.textValue2 != null">
								and A_OR${orIndex}_${index}.TEXT2_
								<choose>
									<when test="queryVariableValue.operator.equals('LIKE')">LIKE</when>
									<otherwise>
										<include
											refid="org.activiti.engine.impl.persistence.entity.HistoricProcessInstanceEntity.executionVariableOperator" />
									</otherwise>
								</choose>
								#{queryVariableValue.textValue2}
							</if>
							<if test="queryVariableValue.longValue != null">
								and A_OR${orIndex}_${index}.LONG_
								<include
									refid="org.activiti.engine.impl.persistence.entity.HistoricProcessInstanceEntity.executionVariableOperator" />
								#{queryVariableValue.longValue}
							</if>
							<if test="queryVariableValue.doubleValue != null">
								and A_OR${orIndex}_${index}.DOUBLE_
								<include
									refid="org.activiti.engine.impl.persistence.entity.HistoricProcessInstanceEntity.executionVariableOperator" />
								#{queryVariableValue.doubleValue}
							</if>
							<!-- Null variable type -->
							<if
								test="queryVariableValue.textValue == null &amp;&amp; queryVariableValue.textValue2 == null &amp;&amp; queryVariableValue.longValue == null &amp;&amp; queryVariableValue.doubleValue == null">
								<choose>
									<when test="queryVariableValue.operator.equals('NOT_EQUALS')">
										and (A_OR${orIndex}_${index}.TEXT_ is not null
										or
										A_OR${orIndex}_${index}.TEXT2_ is not null or
										A_OR${orIndex}_${index}.LONG_ is not null or
										A_OR${orIndex}_${index}.DOUBLE_ is not null or
										A_OR${orIndex}_${index}.BYTEARRAY_ID_ is not null)
									</when>
									<otherwise>
										and A_OR${orIndex}_${index}.TEXT_ is null and
										A_OR${orIndex}_${index}.TEXT2_ is null and
										A_OR${orIndex}_${index}.LONG_ is null and
										A_OR${orIndex}_${index}.DOUBLE_ is null and
										A_OR${orIndex}_${index}.BYTEARRAY_ID_ is null
									</otherwise>
								</choose>
							</if>
						</trim>
					</foreach>
				</trim>
			</foreach>
			<if test="withJobException">
				and (JOB.EXCEPTION_MSG_ is not null or
				JOB.EXCEPTION_STACK_ID_ is not
				null)
			</if>
		</where>
	</sql>
</mapper>